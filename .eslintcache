[{"C:\\Users\\brazd\\IdeaProjects\\cookitweb\\src\\pages\\RecipeListPage.js":"1","C:\\Users\\brazd\\IdeaProjects\\cookitweb\\src\\utils\\Common.js":"2","C:\\Users\\brazd\\IdeaProjects\\cookitweb\\src\\reportWebVitals.js":"3","C:\\Users\\brazd\\IdeaProjects\\cookitweb\\src\\pages\\Posts\\Footer.js":"4","C:\\Users\\brazd\\IdeaProjects\\cookitweb\\src\\pages\\Posts\\Sidebar.js":"5","C:\\Users\\brazd\\IdeaProjects\\cookitweb\\src\\pages\\Posts\\Ingrediens.js":"6","C:\\Users\\brazd\\IdeaProjects\\cookitweb\\src\\pages\\Posts\\Blog.js":"7","C:\\Users\\brazd\\IdeaProjects\\cookitweb\\src\\pages\\Posts\\OrderList.js":"8","C:\\Users\\brazd\\IdeaProjects\\cookitweb\\src\\pages\\RecipeDetailPage.js":"9","C:\\Users\\brazd\\IdeaProjects\\cookitweb\\src\\pages\\Posts\\MainFeaturedPost.js":"10","C:\\Users\\brazd\\IdeaProjects\\cookitweb\\src\\pages\\Posts\\FeaturedPost.js":"11","C:\\Users\\brazd\\IdeaProjects\\cookitweb\\src\\pages\\Posts\\Header.js":"12","C:\\Users\\brazd\\IdeaProjects\\cookitweb\\src\\index.js":"13","C:\\Users\\brazd\\IdeaProjects\\cookitweb\\src\\aws-exports.js":"14","C:\\Users\\brazd\\IdeaProjects\\cookitweb\\src\\utils\\ConfigureAmplify.js":"15","C:\\Users\\brazd\\IdeaProjects\\cookitweb\\src\\SignIn.js":"16","C:\\Users\\brazd\\IdeaProjects\\cookitweb\\src\\App.js":"17","C:\\Users\\brazd\\IdeaProjects\\cookitweb\\src\\pages\\services\\RecipeService.js":"18","C:\\Users\\brazd\\IdeaProjects\\cookitweb\\src\\pages\\model\\Recipe.js":"19","C:\\Users\\brazd\\IdeaProjects\\cookitweb\\src\\pages\\model\\Post.js":"20","C:\\Users\\brazd\\IdeaProjects\\cookitweb\\src\\pages\\HomePage.js":"21"},{"size":4295,"mtime":1616248678130,"results":"22","hashOfConfig":"23"},{"size":105,"mtime":1610793532300,"results":"24","hashOfConfig":"23"},{"size":362,"mtime":1607434180060,"results":"25","hashOfConfig":"26"},{"size":1346,"mtime":1608470315041,"results":"27","hashOfConfig":"23"},{"size":953,"mtime":1609487463404,"results":"28","hashOfConfig":"26"},{"size":1808,"mtime":1610266639486,"results":"29","hashOfConfig":"23"},{"size":4110,"mtime":1615711303356,"results":"30","hashOfConfig":"23"},{"size":1985,"mtime":1616248894245,"results":"31","hashOfConfig":"23"},{"size":4129,"mtime":1616317134424,"results":"32","hashOfConfig":"23"},{"size":2878,"mtime":1610983112708,"results":"33","hashOfConfig":"23"},{"size":2625,"mtime":1615710843555,"results":"34","hashOfConfig":"23"},{"size":2335,"mtime":1610982775784,"results":"35","hashOfConfig":"23"},{"size":612,"mtime":1616317838244,"results":"36","hashOfConfig":"23"},{"size":481,"mtime":1607446314454,"results":"37","hashOfConfig":"26"},{"size":1228,"mtime":1610180878506,"results":"38","hashOfConfig":"26"},{"size":3219,"mtime":1608206686000,"results":"39","hashOfConfig":"40"},{"size":846,"mtime":1609487397408,"results":"41","hashOfConfig":"26"},{"size":2669,"mtime":1615710874982,"results":"42","hashOfConfig":"23"},{"size":536,"mtime":1610887690393,"results":"43","hashOfConfig":"23"},{"size":235,"mtime":1610886287998,"results":"44","hashOfConfig":"23"},{"size":279,"mtime":1609667386493,"results":"45","hashOfConfig":"23"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"rojzxj",{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"do0992",{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":19,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"66","messages":"67","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"50"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"50"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1p2ph96",{"filePath":"84","messages":"85","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"50"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},"C:\\Users\\brazd\\IdeaProjects\\cookitweb\\src\\pages\\RecipeListPage.js",["97","98"],"C:\\Users\\brazd\\IdeaProjects\\cookitweb\\src\\utils\\Common.js",[],["99","100"],"C:\\Users\\brazd\\IdeaProjects\\cookitweb\\src\\reportWebVitals.js",[],"C:\\Users\\brazd\\IdeaProjects\\cookitweb\\src\\pages\\Posts\\Footer.js",[],["101","102"],"C:\\Users\\brazd\\IdeaProjects\\cookitweb\\src\\pages\\Posts\\Sidebar.js",["103"],"C:\\Users\\brazd\\IdeaProjects\\cookitweb\\src\\pages\\Posts\\Ingrediens.js",[],"C:\\Users\\brazd\\IdeaProjects\\cookitweb\\src\\pages\\Posts\\Blog.js",["104"],"C:\\Users\\brazd\\IdeaProjects\\cookitweb\\src\\pages\\Posts\\OrderList.js",[],"C:\\Users\\brazd\\IdeaProjects\\cookitweb\\src\\pages\\RecipeDetailPage.js",["105","106","107","108","109","110","111","112","113","114","115","116","117","118","119","120","121","122","123"],"C:\\Users\\brazd\\IdeaProjects\\cookitweb\\src\\pages\\Posts\\MainFeaturedPost.js",["124"],"import React, {useEffect, useState} from 'react';\nimport PropTypes from 'prop-types';\nimport {makeStyles} from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid';\nimport Link from '@material-ui/core/Link';\nimport {setS3Config} from \"../../utils/ConfigureAmplify\";\nimport RecipeService from \"../services/RecipeService\";\n\nconst useStyles = makeStyles((theme) => ({\n    mainFeaturedPost: {\n        position: 'relative',\n        backgroundColor: theme.palette.grey[800],\n        color: theme.palette.common.white,\n        marginBottom: theme.spacing(2),\n        //backgroundImage: 'url(https://source.unsplash.com/random)',\n        backgroundSize: 'cover',\n        backgroundRepeat: 'no-repeat',\n        backgroundPosition: 'center',\n    },\n    overlay: {\n        position: 'absolute',\n        top: 0,\n        bottom: 0,\n        right: 0,\n        left: 0,\n        backgroundColor: 'rgba(0,0,0,.3)',\n    },\n\n    mainFeaturedPostContent: {\n        position: 'relative',\n        padding: theme.spacing(3),\n        [theme.breakpoints.up('md')]: {\n            padding: theme.spacing(6),\n            paddingRight: 0,\n        },\n    },\n}));\n\nexport default function MainFeaturedPost(props) {\n\n    const classes = useStyles();\n    const {id, post, link} = props;\n    const [s3Link, sets3Link] = useState([]);\n    const recipeService = new RecipeService();\n\n    setS3Config('cookit-app-data', \"public\")\n\n    useEffect(() => {\n        recipeService.loadRecipeImageFromStorage(post.image).then(data => {\n            sets3Link({\n                fileUrl: data\n            })\n        });\n\n    }, [post])\n\n    return (\n        <React.Fragment>\n            <Paper className={classes.mainFeaturedPost} style={{backgroundImage: `url(${s3Link.fileUrl})`}}>\n\n                {<img style={{display: 'none'}} src={post.image} alt={post.imageText}/>}\n                <div className={classes.overlay}/>\n                <Grid container>\n                    <Grid item md={6}>\n                        <div className={classes.mainFeaturedPostContent}>\n                            <Typography component=\"h1\" variant=\"h3\" color=\"inherit\" gutterBottom>\n                                {post.title}\n                            </Typography>\n                            <Typography variant=\"h5\" color=\"inherit\" paragraph>\n                                {post.description}\n                            </Typography>\n                            {link === true &&\n                            <Link variant=\"subtitle1\" href={\"/recipesDetail/\" + id}>{post.linkText}</Link>}\n                        </div>\n                    </Grid>\n                </Grid>\n            </Paper>\n        </React.Fragment>\n    );\n}\n\nMainFeaturedPost.propTypes = {\n    post: PropTypes.object,\n    link: PropTypes.bool\n};","C:\\Users\\brazd\\IdeaProjects\\cookitweb\\src\\pages\\Posts\\FeaturedPost.js",["125","126","127"],"import React, {useEffect, useState} from 'react';\nimport PropTypes from 'prop-types';\nimport {makeStyles} from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport Card from '@material-ui/core/Card';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport axios from \"axios\";\nimport {setS3Config} from \"../../utils/ConfigureAmplify\";\nimport Storage from '@aws-amplify/storage';\n\n\nconst useStyles = makeStyles((theme) => ({\n\n    card_content: {\n        height: 370,\n        display: 'flex',\n        flexDirection: 'column',\n        justifyContent: 'flex-start',\n        alignItems: 'stretch',\n        flex: 1,\n    },\n    media: {\n        height: 165,\n    },\n}));\n\nconst api = axios.create({\n    baseURL: `https://ab6ae6m8u5.execute-api.eu-central-1.amazonaws.com/Prod/`,\n    responseType: 'json'\n})\n\nexport default function FeaturedPost(props) {\n\n    const classes = useStyles();\n    const {id, post, link} = props;\n    const date = new Date(post.date).toLocaleDateString()\n\n    const [s3Link, sets3Link] = useState([]);\n\n    setS3Config('cookit-app-data', \"public\")\n    useEffect(() => {\n        Storage.get(post.image).then(data => {\n            sets3Link({\n                fileUrl: data\n            })\n        }).catch(err => {\n            console.log('s3 error')\n        })\n\n    },[])\n\n    return (\n        <React.Fragment>\n            <Card>\n                <CardActionArea className={classes.card_content} href={\"/recipesDetail/\" + id}>\n                    <CardMedia style={{flex: 1}}\n                               component=\"img\"\n                               className={classes.media}\n                               image={s3Link.fileUrl}\n                               title=\"Contemplative Reptile\"\n                    />\n                    <CardContent style={{flex: 4}}>\n                        <Typography gutterBottom variant=\"h5\" component=\"h2\">\n                            {post.title}\n                        </Typography>\n                        <Typography variant=\"body2\" color=\"textPrimary\" component=\"p\">\n                            {date}\n                        </Typography>\n                        <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n                            {post.description}\n                        </Typography>\n                    </CardContent>\n                </CardActionArea>\n\n\n            </Card>\n        </React.Fragment>\n\n\n    );\n}\n\n\nFeaturedPost.propTypes = {\n    post: PropTypes.object,\n};\n","C:\\Users\\brazd\\IdeaProjects\\cookitweb\\src\\pages\\Posts\\Header.js",[],["128","129"],"C:\\Users\\brazd\\IdeaProjects\\cookitweb\\src\\index.js",[],"C:\\Users\\brazd\\IdeaProjects\\cookitweb\\src\\aws-exports.js",[],["130","131"],"C:\\Users\\brazd\\IdeaProjects\\cookitweb\\src\\utils\\ConfigureAmplify.js",[],"C:\\Users\\brazd\\IdeaProjects\\cookitweb\\src\\SignIn.js",[],"C:\\Users\\brazd\\IdeaProjects\\cookitweb\\src\\App.js",["132"],"import './App.css';\nimport {BrowserRouter as Router, Switch, Route} from 'react-router-dom'\n\nimport RecipeListPage from './pages/RecipeListPage';\nimport RecipeDetailPage from './pages/RecipeDetailPage'\nimport HomePage from './pages/HomePage'\nimport Blog from './pages/Posts/Blog'\n\nimport React from 'react';\nimport SignIn from \"./SignIn\";\n\nexport default function App() {\n\n    return (\n        <Router>\n            <Switch>\n                <Route path={\"/recipes\"}>\n                    <RecipeListPage/>\n                </Route>\n                <Route path={\"/recipesDetail/:id\"} component={RecipeDetailPage}/>\n                <Route path={\"/signin\"}>\n                    <HomePage/>\n                </Route>\n                <Route path={\"/\"}>\n                    <Blog/>\n                </Route>\n            </Switch>\n        </Router>\n    )\n\n}\n","C:\\Users\\brazd\\IdeaProjects\\cookitweb\\src\\pages\\services\\RecipeService.js",["133"],"import axios from \"axios\";\r\nimport Recipe from \"../model/Recipe\"\r\nimport Storage from \"@aws-amplify/storage\";\r\nimport {setS3Config} from \"../../utils/ConfigureAmplify\";\r\n\r\nconst api = axios.create({\r\n    baseURL: `https://ab6ae6m8u5.execute-api.eu-central-1.amazonaws.com/Prod/`,\r\n    responseType: 'json'\r\n})\r\n\r\nexport default class RecipeService {\r\n\r\n    async getRecipeById(id) {\r\n        try {\r\n            let response = await api.get(\"/recipes/full/\" + id);\r\n            if (!response.status == 200) {\r\n                throw new Error(`HTTP error! status: ${response.status}`);\r\n            } else {\r\n                const jsonRecipe = response.data;\r\n                return new Recipe(jsonRecipe.name, jsonRecipe.description, jsonRecipe.items, jsonRecipe.orders, jsonRecipe.images, jsonRecipe.image);\r\n            }\r\n\r\n        } catch (error) {\r\n            console.log(\"Error on load recipes data from database. \" + error)\r\n        }\r\n    }\r\n\r\n    async loadRecipeImageFromStorage(imagePath) {\r\n        setS3Config('cookit-app-data', \"public\")\r\n        if (imagePath != null) {\r\n            return Storage.get(imagePath).then(data => {\r\n                return data\r\n            }).catch(err => {\r\n                console.log('s3 error')\r\n            });\r\n        }\r\n    }\r\n\r\n    async fetchMyAPI(path) {\r\n\r\n        setS3Config('cookit-app-data', \"public\");\r\n\r\n        let link = await Storage.get(path.path).then(imageStoragePath => {\r\n                return {path: imageStoragePath}\r\n            }\r\n        ).catch(err => {\r\n            console.log('s3 tady error' + err)\r\n        });\r\n\r\n        return link;\r\n    }\r\n\r\n    async loadRecipeImagesFromBucket(recipe) {\r\n        return await Promise.all(\r\n            recipe.images.map(async image => {\r\n                let linkResponse = await this.fetchMyAPI(image)\r\n                return linkResponse\r\n            })\r\n        )\r\n    }\r\n\r\n    async loadRecipeDetailContent(id, setData, setIngredients, setOrders, setCharacter) {\r\n\r\n        try{\r\n            let recipe = await this.getRecipeById(id);\r\n            if (recipe != null) {\r\n\r\n                setData(recipe.createPost());\r\n                if(recipe.items != null){\r\n                    setIngredients(recipe.items);\r\n                }if(recipe.orders != null){\r\n                    setOrders(recipe.orders);\r\n                }\r\n                setCharacter(await this.loadRecipeImagesFromBucket(recipe))\r\n\r\n            } else {\r\n                throw new Error(`Recipe ${recipe.name} does not exists in store!`);\r\n            }\r\n        }catch (error) {\r\n            console.log(\"Error on create content of recipe. \" + error)\r\n        }\r\n    }\r\n\r\n}","C:\\Users\\brazd\\IdeaProjects\\cookitweb\\src\\pages\\model\\Recipe.js",[],"C:\\Users\\brazd\\IdeaProjects\\cookitweb\\src\\pages\\model\\Post.js",[],"C:\\Users\\brazd\\IdeaProjects\\cookitweb\\src\\pages\\HomePage.js",[],["134","135"],{"ruleId":"136","severity":1,"message":"137","line":64,"column":21,"nodeType":"138","messageId":"139","endLine":64,"endColumn":31},{"ruleId":"136","severity":1,"message":"140","line":65,"column":27,"nodeType":"138","messageId":"139","endLine":65,"endColumn":43},{"ruleId":"141","replacedBy":"142"},{"ruleId":"143","replacedBy":"144"},{"ruleId":"141","replacedBy":"145"},{"ruleId":"143","replacedBy":"146"},{"ruleId":"136","severity":1,"message":"147","line":20,"column":11,"nodeType":"138","messageId":"139","endLine":20,"endColumn":19},{"ruleId":"136","severity":1,"message":"148","line":38,"column":7,"nodeType":"138","messageId":"139","endLine":38,"endColumn":14},{"ruleId":"136","severity":1,"message":"149","line":2,"column":8,"nodeType":"138","messageId":"139","endLine":2,"endColumn":19},{"ruleId":"136","severity":1,"message":"150","line":3,"column":8,"nodeType":"138","messageId":"139","endLine":3,"endColumn":17},{"ruleId":"136","severity":1,"message":"151","line":4,"column":8,"nodeType":"138","messageId":"139","endLine":4,"endColumn":14},{"ruleId":"136","severity":1,"message":"152","line":5,"column":8,"nodeType":"138","messageId":"139","endLine":5,"endColumn":14},{"ruleId":"136","severity":1,"message":"153","line":7,"column":8,"nodeType":"138","messageId":"139","endLine":7,"endColumn":18},{"ruleId":"136","severity":1,"message":"154","line":8,"column":8,"nodeType":"138","messageId":"139","endLine":8,"endColumn":17},{"ruleId":"136","severity":1,"message":"155","line":9,"column":8,"nodeType":"138","messageId":"139","endLine":9,"endColumn":24},{"ruleId":"136","severity":1,"message":"156","line":14,"column":8,"nodeType":"138","messageId":"139","endLine":14,"endColumn":12},{"ruleId":"136","severity":1,"message":"157","line":15,"column":9,"nodeType":"138","messageId":"139","endLine":15,"endColumn":17},{"ruleId":"136","severity":1,"message":"158","line":20,"column":9,"nodeType":"138","messageId":"139","endLine":20,"endColumn":15},{"ruleId":"136","severity":1,"message":"159","line":30,"column":7,"nodeType":"138","messageId":"139","endLine":30,"endColumn":15},{"ruleId":"136","severity":1,"message":"160","line":40,"column":11,"nodeType":"138","messageId":"139","endLine":40,"endColumn":18},{"ruleId":"136","severity":1,"message":"161","line":44,"column":12,"nodeType":"138","messageId":"139","endLine":44,"endColumn":16},{"ruleId":"136","severity":1,"message":"162","line":45,"column":12,"nodeType":"138","messageId":"139","endLine":45,"endColumn":23},{"ruleId":"136","severity":1,"message":"163","line":46,"column":12,"nodeType":"138","messageId":"139","endLine":46,"endColumn":18},{"ruleId":"136","severity":1,"message":"164","line":47,"column":12,"nodeType":"138","messageId":"139","endLine":47,"endColumn":22},{"ruleId":"136","severity":1,"message":"165","line":49,"column":11,"nodeType":"138","messageId":"139","endLine":49,"endColumn":28},{"ruleId":"136","severity":1,"message":"166","line":67,"column":11,"nodeType":"138","messageId":"139","endLine":67,"endColumn":23},{"ruleId":"167","severity":1,"message":"168","line":83,"column":8,"nodeType":"169","endLine":83,"endColumn":12,"suggestions":"170"},{"ruleId":"167","severity":1,"message":"168","line":57,"column":8,"nodeType":"169","endLine":57,"endColumn":14,"suggestions":"171"},{"ruleId":"136","severity":1,"message":"172","line":29,"column":7,"nodeType":"138","messageId":"139","endLine":29,"endColumn":10},{"ruleId":"136","severity":1,"message":"173","line":37,"column":22,"nodeType":"138","messageId":"139","endLine":37,"endColumn":26},{"ruleId":"167","severity":1,"message":"174","line":52,"column":7,"nodeType":"169","endLine":52,"endColumn":9,"suggestions":"175"},{"ruleId":"141","replacedBy":"176"},{"ruleId":"143","replacedBy":"177"},{"ruleId":"141","replacedBy":"178"},{"ruleId":"143","replacedBy":"179"},{"ruleId":"136","severity":1,"message":"180","line":10,"column":8,"nodeType":"138","messageId":"139","endLine":10,"endColumn":14},{"ruleId":"181","severity":1,"message":"182","line":16,"column":34,"nodeType":"183","messageId":"184","endLine":16,"endColumn":36},{"ruleId":"141","replacedBy":"185"},{"ruleId":"143","replacedBy":"186"},"no-unused-vars","'setIserror' is assigned a value but never used.","Identifier","unusedVar","'setErrorMessages' is assigned a value but never used.","no-native-reassign",["187"],"no-negated-in-lhs",["188"],["187"],["188"],"'archives' is assigned a value but never used.","'sidebar' is assigned a value but never used.","'CssBaseline' is defined but never used.","'Container' is defined but never used.","'Header' is defined but never used.","'Footer' is defined but never used.","'Ingrediens' is defined but never used.","'OrderList' is defined but never used.","'MainFeaturedPost' is defined but never used.","'Grid' is defined but never used.","'Carousel' is defined but never used.","'Button' is defined but never used.","'sections' is assigned a value but never used.","'classes' is assigned a value but never used.","'data' is assigned a value but never used.","'ingredients' is assigned a value but never used.","'orders' is assigned a value but never used.","'imageLinks' is assigned a value but never used.","'responsiveOptions' is assigned a value but never used.","'itemTemplate' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'recipeService'. Either include it or remove the dependency array.","ArrayExpression",["189"],["190"],"'api' is assigned a value but never used.","'link' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'post.image'. Either include it or remove the dependency array.",["191"],["187"],["188"],["187"],["188"],"'SignIn' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected",["187"],["188"],"no-global-assign","no-unsafe-negation",{"desc":"192","fix":"193"},{"desc":"194","fix":"195"},{"desc":"196","fix":"197"},"Update the dependencies array to be: [id, recipeService]",{"range":"198","text":"199"},"Update the dependencies array to be: [post, recipeService]",{"range":"200","text":"201"},"Update the dependencies array to be: [post.image]",{"range":"202","text":"203"},[2410,2414],"[id, recipeService]",[1697,1703],"[post, recipeService]",[1445,1447],"[post.image]"]